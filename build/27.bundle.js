"use strict";(self.webpackChunk_ircam_sc_components_doc=self.webpackChunk_ircam_sc_components_doc||[]).push([[27],{4027:(e,a,o)=>{o.r(a),o.d(a,{template:()=>t});const t=o(182).dy`<!-- Generated by documentation.js. Update this documentation by updating the source code. -->
<h3 id="tableofcontents">Table of Contents</h3>
<ul>
<li><a href="#scheduler">Scheduler</a><ul>
<li><a href="#parameters">Parameters</a></li>
<li><a href="#period">period</a></li>
<li><a href="#lookahead">lookahead</a></li>
<li><a href="#currenttime">currentTime</a></li>
<li><a href="#audiotime">audioTime</a></li>
<li><a href="#has">has</a><ul>
<li><a href="#parameters-1">Parameters</a></li></ul></li>
<li><a href="#defer">defer</a><ul>
<li><a href="#parameters-2">Parameters</a></li>
<li><a href="#examples">Examples</a></li></ul></li>
<li><a href="#add">add</a><ul>
<li><a href="#parameters-3">Parameters</a></li></ul></li></ul></li>
</ul>
<h2 id="scheduler">Scheduler</h2>
<p>The <code>Scheduler</code> interface implement a lookahead scheduler that can be used to
schedule events in an arbitrary timeline.
It aims at finding a tradeoff between time precision, real-time responsiveness
and the weaknesses of the native timers (i.e.setTimeout and setInterval)</p>
<p>For an in-depth explaination of the pattern, see <a href="https://web.dev/audio-scheduling/s">https://web.dev/audio-scheduling/</a></p>
<h3 id="parameters">Parameters</h3>
<ul>
<li><p><code>getTimeFunction</code> <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/function">function</a></strong> A function which return a time in seconds
that will define the timeline of the scheduler.</p></li>
<li><p><code>options</code> <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object">object</a></strong> Options of the scheduler (optional, default <code>{}</code>)</p>
<ul>
<li><code>options.period</code>   (optional, default <code>0.025</code>)</li>
<li><code>options.lookahead</code>   (optional, default <code>0.1</code>)</li>
<li><code>options.queueSize</code>   (optional, default <code>1e3</code>)</li>
<li><code>options.currentTimeToAudioTimeFunction</code>   (optional, default <code>identity</code>)</li>
<li><code>options.maxEngineRecursion</code>   (optional, default <code>100</code>)</li>
<li><code>options.verbose</code>   (optional, default <code>false</code>)</li></ul></li>
</ul>
<h3 id="period">period</h3>
<p>Period at which the scheduler checks for events, in seconds.
Throws if negative or greater than lookahead.</p>
<p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></p>
<h3 id="lookahead">lookahead</h3>
<p>Lookahead duration in seconds.
Throws if negative or lower than period.</p>
<p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></p>
<h3 id="currenttime">currentTime</h3>
<p>Scheduler current logical time.</p>
<p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></p>
<h3 id="audiotime">audioTime</h3>
<p>Scheduler current audio time according to <code>currentTime</code></p>
<p>Type: <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></p>
<h3 id="has">has</h3>
<p>Check whether a given engine has been added to this scheduler</p>
<h4 id="parameters-1">Parameters</h4>
<ul>
<li><code>engine</code> <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object">object</a></strong> Engine to test.</li>
</ul>
<p>Returns <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></strong>&#x20;</p>
<h3 id="defer">defer</h3>
<p>Execute a function once at a given time, compensating for the dt introduced by
the lookahead. Can be usefull for example to synchronize audio (natively scheduled)
and visuals which have no internal timing/scheduling ability.</p>
<p>Be aware that the defer call will introduce small timing error (order of 1-2ms)
due to the setTimeout.</p>
<h4 id="parameters-2">Parameters</h4>
<ul>
<li><code>callback</code> <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/function">function</a></strong> Callback function to schedule.</li>
<li><code>time</code> <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></strong> Time at which the callback should be scheduled.</li>
</ul>
<h4 id="examples">Examples</h4>
<sc-code-example language="javascript">const scheduler = new Scheduler(getTime);

scheduler.add((currentTime, audioTime) =&gt; {
  // schedule some audio event
  playSomeSoundAt(audioTime);
  // defer execution of visual display to compensate the dt
  scheduler.defer(displaySomeSynchronizedStuff, currentTime);
  // ask the scheduler to call back in 1 second
  return currentTime + 1;
});
</sc-code-example>
<h3 id="add">add</h3>
<p>Add a time engine to the scheduler. A valid "time engine" can be any object that implements
an <code>advanceTime(currentTime, audioTime, dt)</code> method. If the engine has already been added
to the scheduler, acts as <code>reset(engine, time)</code></p>
<h4 id="parameters-3">Parameters</h4>
<ul>
<li><code>engine</code> <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/function">function</a></strong> @todo - document as type</li>
<li><code>time</code> <strong><a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></strong> Time inseconds at which the engine should be executed
first, in the time reference of <code>getTimeFunction</code></li>
</ul>`}}]);